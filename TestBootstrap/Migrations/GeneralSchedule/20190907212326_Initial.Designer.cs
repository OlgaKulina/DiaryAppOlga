// <auto-generated />
using System;
using DiaryAppOlga.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DiaryAppOlga.Migrations.GeneralSchedule
{
    [DbContext(typeof(GeneralScheduleContext))]
    [Migration("20190907212326_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("DiaryAppOlga.Models.Goal", b =>
                {
                    b.Property<int>("GoalId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description");

                    b.Property<DateTime>("EndDate");

                    b.Property<string>("GoalName")
                        .IsRequired();

                    b.Property<DateTime>("StartDate");

                    b.Property<bool>("Status");

                    b.HasKey("GoalId");

                    b.ToTable("Goals");
                });

            modelBuilder.Entity("DiaryAppOlga.Models.Grade", b =>
                {
                    b.Property<int>("GradeId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("GradeName");

                    b.Property<string>("Smile");

                    b.HasKey("GradeId");

                    b.ToTable("Grades");
                });

            modelBuilder.Entity("DiaryAppOlga.Models.MonthlyTask", b =>
                {
                    b.Property<int>("MonthlyTaskId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500);

                    b.Property<DateTime>("EndDate");

                    b.Property<int>("GoalId");

                    b.Property<int?>("GradeId");

                    b.Property<int>("Priorities");

                    b.Property<DateTime>("StartDate");

                    b.Property<bool>("Status");

                    b.Property<string>("TaskName")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("MonthlyTaskId");

                    b.HasIndex("GoalId");

                    b.HasIndex("GradeId");

                    b.ToTable("MonthlyTasks");
                });

            modelBuilder.Entity("DiaryAppOlga.Models.WeeklyTask", b =>
                {
                    b.Property<int>("WeeklyTaskId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500);

                    b.Property<string>("Discriminator")
                        .IsRequired();

                    b.Property<int>("GoalId");

                    b.Property<int?>("GradeId");

                    b.Property<int>("PrioritiesW");

                    b.Property<bool>("Status");

                    b.Property<string>("TaskName")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("WeeklyTaskId");

                    b.HasIndex("GoalId");

                    b.HasIndex("GradeId");

                    b.ToTable("Fourth Week");

                    b.HasDiscriminator<string>("Discriminator").HasValue("WeeklyTask");
                });

            modelBuilder.Entity("DiaryAppOlga.Models.FirstWeek", b =>
                {
                    b.HasBaseType("DiaryAppOlga.Models.WeeklyTask");

                    b.Property<int>("FiW_Id");

                    b.HasDiscriminator().HasValue("FirstWeek");
                });

            modelBuilder.Entity("DiaryAppOlga.Models.FourthWeek", b =>
                {
                    b.HasBaseType("DiaryAppOlga.Models.WeeklyTask");

                    b.Property<int>("FoW_Id");

                    b.ToTable("Forth Week");

                    b.HasDiscriminator().HasValue("FourthWeek");
                });

            modelBuilder.Entity("DiaryAppOlga.Models.SecondWeek", b =>
                {
                    b.HasBaseType("DiaryAppOlga.Models.WeeklyTask");

                    b.Property<int>("SW_Id");

                    b.ToTable("Second Week");

                    b.HasDiscriminator().HasValue("SecondWeek");
                });

            modelBuilder.Entity("DiaryAppOlga.Models.ThirdWeek", b =>
                {
                    b.HasBaseType("DiaryAppOlga.Models.WeeklyTask");

                    b.Property<int>("TW_Id");

                    b.ToTable("Third Week");

                    b.HasDiscriminator().HasValue("ThirdWeek");
                });

            modelBuilder.Entity("DiaryAppOlga.Models.MonthlyTask", b =>
                {
                    b.HasOne("DiaryAppOlga.Models.Goal", "Goal")
                        .WithMany()
                        .HasForeignKey("GoalId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("DiaryAppOlga.Models.Grade", "Grade")
                        .WithMany()
                        .HasForeignKey("GradeId");
                });

            modelBuilder.Entity("DiaryAppOlga.Models.WeeklyTask", b =>
                {
                    b.HasOne("DiaryAppOlga.Models.Goal", "Goal")
                        .WithMany()
                        .HasForeignKey("GoalId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("DiaryAppOlga.Models.Grade", "Grade")
                        .WithMany()
                        .HasForeignKey("GradeId");
                });
#pragma warning restore 612, 618
        }
    }
}
